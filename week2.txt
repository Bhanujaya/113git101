
## **Variable**

use snake_case ex. this_is_example

‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≤‡∏á‡∏ô‡∏≠‡∏Å ‡∏ó‡∏≥‡πÑ‡∏î‡πâ 2 ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Ñ‡∏∑‡∏≠

```c
//compiler directive
#include <stdio.h>
#define this_is_example = 5 
int main() {
   printf("%d" , this_is_example);
}

or 
#include <stdio.h>
int q; // ‡∏Ñ‡πà‡∏≤ default ‡πÄ‡∏õ‡πá‡∏ô 0 ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡πà‡∏≤‡πÉ‡∏ômemory‡πÉ‡∏´‡πâ
//int q = 1;
int main() {
   int w; // ‡πÑ‡∏õ‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ô memory address ‡πÄ‡∏â‡∏¢‡πÜ ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô 0 ‡πÑ‡∏°‡πà clear‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô memory ‡πÉ‡∏´‡πâ
   printf("%d %d", q, w);
}

```

OS ‡πÅ‡∏ö‡πà‡∏á memory ‡πÑ‡∏ß‡πâ 2 ‡∏™‡πà‡∏ß‡∏ô ‡πÄ‡∏Å‡πá‡∏ö global - local

## **Data Type**

- Integer Types

|       Type |     Storage Size |                                      Value range |       printf(%) |
| --- | --- | --- | --- |
|       char |        1 byte |                                      -128 to 127 |          %c |
|       short |        2 bytes |                                 -32,768 to 32,767 |         %hd |
|         int |  4 bytes(32 bits) |                      -2,147,483,648 to 2,147,483,647 |          %d |
|     long |  8 bytes(64 bits) |  -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 |          %ld |

      : unsigned ‡∏ï‡∏±‡∏î sign ‡∏à‡∏≤‡∏Å value 

```c
#include <stdio.h>

int main() {
   unsigned char num = 128;
   printf("%u" ,num); 
}

//128
```

      : short ‡∏•‡∏î storage size ‡∏•‡∏á 2 ‡πÄ‡∏ó‡πà‡∏≤ (short int = 2 bytes)

      : long ‡πÄ‡∏û‡∏¥‡πà‡∏° storage size ‡∏Ç‡∏∂‡πâ‡∏ô 2 ‡πÄ‡∏ó‡πà‡∏≤ (long long int = 8 bytes)

```c
#include <stdio.h>

int main() {
   long long int num = 9223372036854775807;
   printf("%lld" ,num); 
}

//9223372036854775807
```

- Floating-Point Types

|       Type |     Storage Size |           Value range |        precision |      printf(%) |
| --- | --- | --- | --- | --- |
|       float |    4 byte (32 bits) |      1.2E-38 to 3.4E+38 |            6 |          %f |
|     double |    8 bytes (64 bits) |     2.3E-308 to 1.7E+308 |           15 |           %f |
|  long double |        10 bytes |   3.4E-4932 to 1.1E+4932 |           19 |          %Lf |

---

## Boolean

```c
//‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà boolean = false
    int found = 0;
    float isExist = 0.0;
    char isBool = '\0'; //terminate, null char
```

## String

string ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á ‡πÉ‡∏ô c ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô char[10 ] ‡∏ã‡∏∂‡πà‡∏á‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô [ ] ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç‡∏Å‡∏≥‡∏´‡∏ô‡∏î parameter

note : ‡∏Ñ‡∏ß‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ parameter ‡πÉ‡∏´‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏±‡∏ö 2 ‡∏´‡∏ô‡πà‡∏ß‡∏¢

<aside>
üí° Segmentation Fault - ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á memory ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πâ‡πÉ‡∏ä‡πà‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°1

</aside>



## Operators

unary ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ 1 operand / binary ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ 2 operand

### relational operator :  > < >= <= != ==

### logical operator : ! && ||

note: ‡∏ñ‡πâ‡∏≤ && ‡πÄ‡∏à‡∏≠ False ‡∏´‡∏£‡∏∑‡∏≠ || ‡πÄ‡∏à‡∏≠ True Evaluation stop when truth value is known

### Arimetihic operator: + - *

% ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö float double ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/26de9759-f9e6-41d1-b348-db3d6e81b1ce/Untitled.png)

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/9a26f4e5-380c-4719-af95-adb68aca3f62/Untitled.png)

 #2*4 / 3+2-3 % 2 = (2*4)/3 + 2 - (3%2) = 2+2-1 = 3

#3 - - 2 ‡πÅ‡∏õ‡∏•‡∏á 2 ‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏ö = -2 ‡πÑ‡∏î‡πâ 3 -(-2) = 5

### Comma operator : ,

### Increment and Decrement Operators:

- ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á storage/ variable ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ß‡πâ

n++ ‡∏Å‡πà‡∏≠‡∏ô n ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°

++n ‡∏´‡∏•‡∏±‡∏á n ‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°

n‚Äî ‡∏Å‡πà‡∏≠‡∏ô n ‡∏ñ‡∏π‡∏Å‡∏•‡∏î

‚Äîn  ‡∏´‡∏•‡∏±‡∏á n ‡∏ñ‡∏π‡∏Å‡∏•‡∏î

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/a39db3af-1491-4949-a0e9-70503f4f59e3/Untitled.png)

1 1 2 3 3 3 2 1 1 

note : (i+j)++ is illegal

### Bitwise Operators :

### sizeof operator : ‡∏î‡∏π‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£